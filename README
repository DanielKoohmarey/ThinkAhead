=====================================================================================================
=====================================================================================================
  _______ _     _       _              _                    _ 
 |__   __| |   (_)     | |       /\   | |                  | |
    | |  | |__  _ _ __ | | __   /  \  | |__   ___  __ _  __| |
    | |  | '_ \| | '_ \| |/ /  / /\ \ | '_ \ / _ \/ _` |/ _` |
    | |  | | | | | | | |   <  / ____ \| | | |  __/ (_| | (_| |
    |_|  |_| |_|_|_| |_|_|\_\/_/    \_\_| |_|\___|\__,_|\__,_|
                                                              
=====================================================================================================
=====================================================================================================
TABLE OF CONTENTS
-Table of Contents
-Live Deployment and Repo Links
-Configuring Database
-Local Database
-Heroku Database
-Setting Up: Local vs Heroku
-Running Tests
-UI Testing
-Running Coverage

Last Update: 2 April 2014
     	     2:38 PM

** If you have any trouble with setting up database/local test/heroku/running tests, contact Marion **
======================================================================================================
======================================================================================================


========================
LIVE DEPLOYMENT AND REPO
========================

Public Repo:
https://github.com/DanielKoohmarey/ThinkAhead.git

Tentative Live Deployment via Heroku:
http://pacific-basin-7918.herokuapp.com/
*If you see "permission denied for relation django_session" then we have to reset the database in Heroku


====================
CONFIGURING DATABASE
====================	    

	The databases run in Postgres and not Django's default SQLite. 
	To run it locally, you have to create the database locally and sync it. 

	0) Install postgres
	   a) Download postgres:
	      sudo apt-get postgres

	      If you are using OSX, follow the steps in this link:
              http://russbrooks.com/2010/11/25/install-postgresql-9-on-os-x
              https://coderwall.com/p/xezzaa
	   b) Download the adaptor, psycopg:
	      sudo apt-get install libpq-dev python-dev
	      or try it manually:
	      http://initd.org/psycopg/install/

	      If you are using OSX and sees an error message along the lines of “Hard error in the future yada yada” do this before installing psycopg:
	      export CFLAGS=-Qunused-arguments
	      export CPPFLAGS=-Qunused-arguments
	      sudo -E pip install psycopg2

	   c) Install the library
	      pip install djorm-ext-pgarray
	      pip install djorm-ext-expressions
	   d) Change thinkahead/settings.py so that you comment DATABASE that is configured to SQLlite and uncomment DATABASE that is congigured to postgres

	1) Create a user for postgres
	   a) Type "su - postgres" in the terminal should ask you for authentication. If your password doesnt pass several times, you might have to overwrite your password by typing "sudo passwd postgres"
	   b) In Postgres' prompt, type "createuser <yourusername>". If it asks if you want to be the superuser, just type yes
	   c) exit by typing "exit" in Postgres' prompt

	2) Create a database
	   a) In the terminal, type "createdb darsplus"
	   b) In the project directory, type "python manage.py syncdb". It shouldn't be an issue but you might have to change DATABASE settings like 'host', 'username' and 'password' to fit your database

	3) Manually add entries to DB (Just in case)
	   To manually add the entries, type "python manage.py loaddata darsplus/fixtures/initial_data.json"
	   If successful, you should see "XXX objects installed out of XXX fixtures"



==============
LOCAL DATABASE
==============

	If you run the webapp locally (i.e. via "python manage.py runserver"), all of the records and databases are saved in your local database.
	Here are the steps (and example commands) if you want to observe your DB

	0) In your terminal, type "python manage.py dbshell". This should bring you to Postgres' prompt

	1) Example commands:

	   a) '\dt'
	      lists the databases that you have. Note that the name is usually "<app name>_<model name>"

	   b) '\d darsplus_courses'
	      lists the field names AND field type of the given database. 
	      If you made an update to models, this is what you should do to check if the DBs are updated
	      If DB is not up to date, lookat step 3

	   c) 'select * from darsplus_userprofile;'
	      returns all entries in userprofile

	   d) 'select * from darsplus_courses where "minUnit" > 3;'
	      returns all entries where some fields satisfy some condition
	      note that since our fields have capital letters,we HAVE TO PUT THE FIELD WITH DOUBLE QUOTES

	   e) 'select * from darsplus_courses where "minUnit" > 3 and "maxUnit" < 10;'
	      example of multiple conditions
	      
	2) To exit the Postgres prompt, type "\q"

	3) Updating Database. 
	   Right now, the only way to update the database is to remove it, and recreate it

	   a) To remove database, type "dropdb 'darsplus'" in the terminal

	   b) To recreate database, type "createdb 'darsplus'" in the terminal
	   
	   c) To sync the database with Django app, type "python manage.py syncdb" in the terminal



===============
HEROKU DATABASE
===============
	
	If you made a change in models.py and wants to see that change visible in the heroku app, do the following commands:
	
	0) In the terminal, type "heroku pg:reset HEROKU_POSTGRESQL_CYAN_URL" *That should be the name of the DB in our heroku app*
	   If it is not the name of the DB, the command should return an error with list of valid DB name

	1) In the terminal, type "heroku run python manage.py syncdb"



===============================
SETTING UP: LOCAL VERSUS HEROKU
===============================

      By default the settings.py and wsig.py files are set to work locally. 
      In the case that it got pushed to a heroku setting, there are two things that you need to change

      0) Open thinkahead/wsgi.py. Comment the part that is for Heroku (should have a comment) and uncomment the other one
      
      1) Go to thinkahead/settings.py. At the very bottom, there shold be a chunk of a code with the header "The lines that follow configure Heroku". Uncomment that (Mainly to change the DATABASES setting)



=============
RUNNING TESTS
=============

	All test files and/or directories should reside within darsplus/tests/

	0) Running the whole test suites:
	   "python manage.py test"

	1) Running a specific test case:
	   "python manage.py test darsplus.tests.<python file name>"
	   e.g.
	   "python manage.py test darsplus.tests.testColleges"
	   "python manage.py test darsplus.tests.testCourses"

	2) Running a specific test Suite:
	   "python manage.py test darsplus.tests.<python file name>.<class name>.<function name>"
	   


==========
UI TESTING
==========

	For UI Testing, we are currently using Selenium.
	Instructions for installing and running it can be found here:
	http://docs.seleniumhq.org/

	sudo pip install selenium
	0) Running all the GUI tests
	“python manage.py test darsplus.tests.testGUI”

	1)Running a specific GUI test case:
	“python manage.py test darsplus.tests.testGUI.testGUI.<function name>”


================
RUNNING COVERAGE
================
	
	Coverage is a module/package that tests your spread of test (I think). Requried for submission

	0) Check your Django version, should update to 1.6.2
	   
	   a) Do the following in Python:
	      >import django
	      >django.VERSION

	   b) If you have the latest one, go to next step. Otherwise, do 
	      "sudo pip install -U Django"
	      and check your version again. Should be updated

	1) Download coverage.py at
	   https://pypi.python.org/pypi/coverage

	2) unzip it and in the terminal run "sudo python setup.py install"

	3) To run coverage, do the following on the directory that has manage.py:
	   coverage run --source='.' manage.py test darsplus

	4) In the terminal, do this to present it in a better way
	   coverage report

	5) If you want to have a list of line numbers that were not exectued, do
	   coverage report -m



